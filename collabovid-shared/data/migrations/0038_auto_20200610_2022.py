# Generated by Django 3.0.7 on 2020-06-10 20:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0037_merge_20200607_1403'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='GeoCountry',
            fields=[
                ('geolocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.GeoLocation')),
                ('alpha_2', models.CharField(max_length=2)),
            ],
            bases=('data.geolocation',),
        ),
        migrations.CreateModel(
            name='GeoLocationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(choices=[(0, 'rejected'), (1, 'rejected automatically'), (2, 'unknown'), (3, 'added automatically'), (4, 'accepted')])),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.GeoLocation')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Paper')),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='locations',
            field=models.ManyToManyField(related_name='papers', through='data.GeoLocationMembership', to='data.GeoLocation'),
        ),
        migrations.CreateModel(
            name='GeoCity',
            fields=[
                ('geolocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.GeoLocation')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='data.GeoCountry')),
            ],
            bases=('data.geolocation',),
        ),
    ]
